(function($) {
	"use strict";
	$(document).ready(function(){
		// Add `change` listener to all dropdowns generated by the plugin
		$('body').on('change', '.dropdowncontent-dropdown', function() {
			var blockName = $(this).attr('name');
			// Add a custom event when the selection changes for both the previous selection and the new selection
			$('[data-dropdowncontent-name="' + blockName + '"].dropdowncontent-content.dropdowncontent-content-selected').trigger('dropdown-content:unselect');
			$('[data-dropdowncontent-name="' + blockName + '"][data-dropdowncontent-value="' + $(this).val() + '"].dropdowncontent-content').trigger('dropdown-content:select');
		});

		// These are the default actions of simply adding or removing the `dropdowncontent-content-selected` class from the currently selected or unselected content block
		$('.dropdowncontent-content').on('dropdown-content:unselect', function() {
			$(this).removeClass('dropdowncontent-content-selected');
		}).on('dropdown-content:select', function() {
			$(this).addClass('dropdowncontent-content-selected');
		});

		// Fire the `dropdown-content:select` on page load if any of the content areas are already visible
		$('[data-dropdowncontent-name].dropdowncontent-content-selected').trigger('dropdown-content:select');
	});
})(jQuery);
